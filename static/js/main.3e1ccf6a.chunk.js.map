{"version":3,"sources":["components/Layout/Footer.jsx","components/Layout/Header.jsx","functions/sortTasks.js","components/Tasks/TaskList/TaskList.jsx","components/Tasks/TaskList/ImportantTaskList.jsx","components/Tasks/TaskList/FinishedTasksList.jsx","components/UI/SortList.jsx","components/hooks/useFormCheck.jsx","components/Tasks/TaskForm/TaskForm.jsx","components/Tasks/TaskForm/TaskFormFunctionality.jsx","components/Layout/Main.jsx","App.jsx","index.js"],"names":["Footer","id","className","Header","sortTasks","sortDirection","tasks","sort","current","value","a","b","title","date","TaskList","props","normalTasks","map","item","description","onClick","deleted","finished","ImportantTaskList","importantTasks","FinishedTasksList","finishedTasks","sortedTasks","actualDate","Date","toLocaleString","SortList","sortingMethod","changeHandler","ref","onChange","defaultValue","useFormCheck","currentTitle","currentDate","currentDescription","useState","desc","isTouched","setIsTouched","titleCheck","trim","dateCheck","slice","toISOString","descCheck","titleBlurHandler","dateBlurHandler","descBlurHandler","TaskForm","submitHandler","onSubmit","name","type","onBlur","rows","TaskFormFunctionality","addTaskHandler","currentId","setCurrentId","setCurrentTitle","setCurrentDescription","setCurrentDate","importantTask","setImportantTask","e","preventDefault","task","prevState","target","time","checked","Main","finishTaskHandle","deleteTaskHandle","setSortDirection","sortingMethodNormal","useRef","sortingMethodImportant","sortingMethodFinished","useEffect","App","setTasks","setFinishedTasks","recognizer","clickedTask","findIndex","x","push","splice","newTask","importance","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3e1ccf6a.chunk.js","sourcesContent":["import \"../../styles/SCSS/footer.scss\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer id=\"footer\">\r\n      <p className=\"footer_title\">Made by Remigiusz Wo≈∫niak</p>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import \"../../styles/SCSS/header.scss\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header id=\"header\">\r\n      <h1 className=\"header_title\">Todo</h1>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","const sortTasks = (sortDirection, tasks, sort) => {\r\n  switch (sortDirection ? sort.current.value : \"A-Z\") {\r\n    case \"A-Z\":\r\n      return tasks.sort((a, b) => (a.title > b.title ? 1 : -1));\r\n    case \"Z-A\":\r\n      return tasks.sort((a, b) => (a.title < b.title ? 1 : -1));\r\n    case \"New-old\":\r\n      return tasks.sort((a, b) => (a.date > b.date ? 1 : -1));\r\n    case \"Old-new\":\r\n      return tasks.sort((a, b) => (a.date < b.date ? 1 : -1));\r\n    default:\r\n      return tasks.sort((a, b) => (a.title > b.title ? 1 : -1));\r\n  }\r\n};\r\n\r\nexport default sortTasks;\r\n","import sortTasks from \"../../../functions/sortTasks\";\r\nimport \"../../../styles/SCSS/taskList.scss\";\r\n\r\nconst TaskList = (props) => {\r\n  const { sortDirection, sort, tasks } = props;\r\n  const sortedTasks = sortTasks(sortDirection, tasks.normalTasks, sort);\r\n\r\n  const task = sortedTasks.map((item) => {\r\n    return (\r\n      <li key={\"t\" + item.id} className=\"taskList_task\">\r\n        <h4 className=\"task_title\">{item.title}</h4>\r\n        <p className=\"task_date\">{item.date}</p>\r\n        <p className=\"task_description\">{item.description}</p>\r\n        <div className=\"task_buttonSpace\">\r\n          <button\r\n            className=\"buttonSpace_deleteButton\"\r\n            onClick={() => props.deleted(item.id, \"notFinishedNormalTask\")}\r\n          >\r\n            Delete\r\n          </button>\r\n          <button\r\n            className=\"buttonSpace_finishButton\"\r\n            onClick={() => props.finished(item.id, \"FinishedNormalTask\")}\r\n          >\r\n            Finish\r\n          </button>\r\n        </div>\r\n      </li>\r\n    );\r\n  });\r\n  return task;\r\n};\r\n\r\nexport default TaskList;\r\n","import sortTasks from \"../../../functions/sortTasks\";\r\nimport \"../../../styles/SCSS/taskList.scss\";\r\n\r\nconst ImportantTaskList = (props) => {\r\n  const { sortDirection, sort, tasks } = props;\r\n\r\n  const sortedTasks = sortTasks(sortDirection, tasks.importantTasks, sort);\r\n\r\n  const task = sortedTasks.map((item) => {\r\n    return (\r\n      <li key={\"it\" + item.id} className=\"taskList_task\">\r\n        <h4 className=\"task_title\">{item.title}</h4>\r\n\r\n        <p className=\"task_date\">{item.date}</p>\r\n        <p className=\"task_description\">{item.description}</p>\r\n        <div className=\"task_buttonSpace\">\r\n          <button\r\n            onClick={() => props.deleted(item.id, \"notFinishedImportantTask\")}\r\n            className=\"buttonSpace_deleteButton\"\r\n          >\r\n            Delete\r\n          </button>\r\n          <button\r\n            onClick={() => props.finished(item.id, \"FinishedImportantTask\")}\r\n            className=\"buttonSpace_finishButton\"\r\n          >\r\n            Finish\r\n          </button>\r\n        </div>\r\n      </li>\r\n    );\r\n  });\r\n  return task;\r\n};\r\nexport default ImportantTaskList;\r\n","import sortTasks from \"../../../functions/sortTasks\";\r\nimport \"../../../styles/SCSS/taskList.scss\";\r\n\r\nconst FinishedTasksList = (props) => {\r\n  const { sortDirection, sort, finishedTasks } = props;\r\n\r\n  const sortedTasks = sortTasks(\r\n    sortDirection,\r\n    finishedTasks.finishedTasks,\r\n    sort\r\n  );\r\n\r\n  const actualDate = new Date().toLocaleString();\r\n\r\n  const finishedTask = sortedTasks.map((item) => {\r\n    return (\r\n      <li key={\"ft\" + item.id} className=\"taskList_task\">\r\n        <h4 className=\"task_title\">{item.title}</h4>\r\n        <p className=\"task_date\">{item.date}</p>\r\n        <p className=\"task_date\">(Termination date: {actualDate})</p>\r\n        <p className=\"task_description\">{item.description}</p>\r\n        <div className=\"task_buttonSpace\">\r\n          <button\r\n            className=\"buttonSpace_deleteButton\"\r\n            onClick={() => props.deleted(item.id, \"finished\")}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </li>\r\n    );\r\n  });\r\n  return finishedTask;\r\n};\r\n\r\nexport default FinishedTasksList;\r\n","import \"../../styles/SCSS/sortList.scss\";\r\n\r\nconst SortList = (props) => {\r\n  const { sortingMethod, changeHandler } = props;\r\n  return (\r\n    <select\r\n      ref={sortingMethod}\r\n      onChange={changeHandler}\r\n      className=\"sortList\"\r\n      defaultValue={\"A-Z\"}\r\n    >\r\n      <option value=\"A-Z\">A-Z</option>\r\n      <option value=\"Z-A\">Z-A</option>\r\n      <option value=\"New-old\">New - old</option>\r\n      <option value=\"Old-new\">Old - new</option>\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default SortList;\r\n","import { useState } from \"react\";\r\nconst useFormCheck = (currentTitle, currentDate, currentDescription) => {\r\n  const [isTouched, setIsTouched] = useState({\r\n    title: false,\r\n    date: false,\r\n    desc: false,\r\n  });\r\n\r\n  const titleCheck = currentTitle.trim() === \"\" && isTouched.title;\r\n\r\n  const dateCheck =\r\n    currentDate.slice(0, 10) < new Date().toISOString().slice(0, 10) &&\r\n    isTouched.date;\r\n\r\n  const descCheck = currentDescription.trim() === \"\" && isTouched.desc;\r\n\r\n  const titleBlurHandler = () => {\r\n    setIsTouched({ ...isTouched, title: true });\r\n  };\r\n\r\n  const dateBlurHandler = () => {\r\n    setIsTouched({ ...isTouched, date: true });\r\n  };\r\n\r\n  const descBlurHandler = () => {\r\n    setIsTouched({ ...isTouched, desc: true });\r\n  };\r\n\r\n  return {\r\n    titleCheck,\r\n    dateCheck,\r\n    descCheck,\r\n    titleBlurHandler,\r\n    dateBlurHandler,\r\n    descBlurHandler,\r\n  };\r\n};\r\n\r\nexport default useFormCheck;\r\n","import \"../../../styles/SCSS/taskForm.scss\";\r\nconst TaskForm = (props) => {\r\n  const {\r\n    submitHandler,\r\n    changeHandler,\r\n    titleCheck,\r\n    dateCheck,\r\n    descCheck,\r\n    titleBlurHandler,\r\n    dateBlurHandler,\r\n    descBlurHandler,\r\n  } = props;\r\n\r\n  return (\r\n    <div className=\"taskFormSpace\">\r\n      <form onSubmit={submitHandler} className=\"taskFormSpace_taskForm\">\r\n        <h1 className=\"taskForm_title\">Enter information</h1>\r\n        <div className=\"taskForm_informationSpace\">\r\n          <label className=\"informationSpace_title\">Title:</label>{\" \"}\r\n          <input\r\n            className=\"informationSpace_input\"\r\n            name=\"currentTitle\"\r\n            type=\"text\"\r\n            onChange={changeHandler}\r\n            onBlur={titleBlurHandler}\r\n          />\r\n        </div>\r\n        {titleCheck && (\r\n          <p className=\"taskForm_errorMessage\">Please provide title.</p>\r\n        )}\r\n        <div className=\"taskForm_informationSpace\">\r\n          <label className=\"informationSpace_title\">Date:</label>{\" \"}\r\n          <input\r\n            className=\"informationSpace_input informationSpace_input-date\"\r\n            name=\"currentDate\"\r\n            type=\"datetime-local\"\r\n            onChange={changeHandler}\r\n            onBlur={dateBlurHandler}\r\n          />\r\n        </div>\r\n        {dateCheck && (\r\n          <p className=\"taskForm_errorMessage\">Please select future date.</p>\r\n        )}\r\n        <div className=\"taskForm_informationSpace\">\r\n          <label className=\"informationSpace_title\">Description:</label>{\" \"}\r\n          <textarea\r\n            className=\"informationSpace_input\"\r\n            name=\"currentDescription\"\r\n            rows={8}\r\n            onChange={changeHandler}\r\n            onBlur={descBlurHandler}\r\n          />\r\n        </div>\r\n        {descCheck && (\r\n          <p className=\"taskForm_errorMessage\">Please provide description.</p>\r\n        )}\r\n        <div className=\"taskForm_informationSpace\">\r\n          <label className=\"informationSpace_title\">Important:</label>{\" \"}\r\n          <input\r\n            className=\"informationSpace_input informationSpace_input-importantCheckbox\"\r\n            name=\"importantTask\"\r\n            type=\"checkbox\"\r\n            onChange={changeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"taskForm_buttonSpace\">\r\n          <button type=\"submit\" className=\"buttonSpace_button\">\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskForm;\r\n","import { useState } from \"react\";\r\nimport useFormCheck from \"../../hooks/useFormCheck\";\r\nimport TaskForm from \"./TaskForm\";\r\n\r\nconst TaskFormFunctionality = (props) => {\r\n  const { addTaskHandler } = props;\r\n\r\n  const [currentId, setCurrentId] = useState(0);\r\n  const [currentTitle, setCurrentTitle] = useState(\"\");\r\n  const [currentDescription, setCurrentDescription] = useState(\"\");\r\n  const [currentDate, setCurrentDate] = useState(\"\");\r\n  const [importantTask, setImportantTask] = useState(false);\r\n\r\n  const {\r\n    titleCheck,\r\n    dateCheck,\r\n    descCheck,\r\n    titleBlurHandler,\r\n    dateBlurHandler,\r\n    descBlurHandler,\r\n  } = useFormCheck(currentTitle, currentDate, currentDescription);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (titleCheck || dateCheck || descCheck) {\r\n      return;\r\n    }\r\n\r\n    const task = {\r\n      id: currentId,\r\n      title: currentTitle,\r\n      description: currentDescription,\r\n      date: currentDate,\r\n    };\r\n\r\n    if (importantTask === false) {\r\n      addTaskHandler(task, false);\r\n      setCurrentId((prevState) => prevState + 1);\r\n    } else {\r\n      addTaskHandler(task, true);\r\n      setCurrentId((prevState) => prevState + 1);\r\n    }\r\n  };\r\n\r\n  const changeHandler = (e) => {\r\n    const name = e.target.name;\r\n\r\n    if (name === \"currentDate\") {\r\n      const date = e.target.value.slice(0, 10);\r\n      const time = e.target.value.slice(11);\r\n      const dateTime = date + \" \" + time;\r\n      setCurrentDate(dateTime);\r\n    } else {\r\n      if (name === \"currentTitle\") {\r\n        setCurrentTitle(e.target.value);\r\n      } else if (name === \"currentDescription\") {\r\n        setCurrentDescription(e.target.value);\r\n      }\r\n    }\r\n\r\n    if (name === \"importantTask\" && e.target.checked) {\r\n      setImportantTask(true);\r\n    } else if (name === \"importantTask\") {\r\n      setImportantTask(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TaskForm\r\n      submitHandler={submitHandler}\r\n      changeHandler={changeHandler}\r\n      titleCheck={titleCheck}\r\n      dateCheck={dateCheck}\r\n      descCheck={descCheck}\r\n      titleBlurHandler={titleBlurHandler}\r\n      dateBlurHandler={dateBlurHandler}\r\n      descBlurHandler={descBlurHandler}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TaskFormFunctionality;\r\n","import \"../../styles/SCSS/main.scss\";\r\nimport TaskList from \"../Tasks/TaskList/TaskList\";\r\nimport ImportantTaskList from \"../Tasks/TaskList/ImportantTaskList\";\r\nimport FinishedTasksList from \"../Tasks/TaskList/FinishedTasksList\";\r\nimport { useEffect } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport { useState } from \"react\";\r\nimport SortList from \"../UI/SortList\";\r\nimport TaskFormFunctionality from \"../Tasks/TaskForm/TaskFormFunctionality\";\r\n\r\nconst Main = (props) => {\r\n  const {\r\n    tasks,\r\n    finishedTasks,\r\n    finishTaskHandle,\r\n    deleteTaskHandle,\r\n    addTaskHandler,\r\n  } = props;\r\n\r\n  const [sortDirection, setSortDirection] = useState(false);\r\n\r\n  const sortingMethodNormal = useRef(\"\");\r\n  const sortingMethodImportant = useRef(\"\");\r\n  const sortingMethodFinished = useRef(\"\");\r\n\r\n  useEffect(() => {\r\n    setSortDirection({ sortDirection: true });\r\n  }, []);\r\n\r\n  const changeHandler = (e) => {\r\n    const name = e.target.name;\r\n    setSortDirection({ [name]: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <main id=\"mainSection\">\r\n      <TaskFormFunctionality addTaskHandler={addTaskHandler} />\r\n      <section className=\"mainSection_taskSpace\">\r\n        <div className=\"taskSpace_titleAndSortSpace\">\r\n          <h3 className=\"titleAndSortSpace_title\">Todo tasks</h3>\r\n          <SortList\r\n            sortingMethod={sortingMethodNormal}\r\n            changeHandler={changeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"taskSpace_taskListSpace\">\r\n          <ul className=\"taskListSpace_taskList\">\r\n            <TaskList\r\n              tasks={tasks}\r\n              finished={finishTaskHandle}\r\n              deleted={deleteTaskHandle}\r\n              sort={sortingMethodNormal}\r\n              sortDirection={sortDirection}\r\n            />\r\n          </ul>\r\n        </div>\r\n      </section>\r\n      <section className=\"mainSection_taskSpace\">\r\n        <div className=\"taskSpace_titleAndSortSpace\">\r\n          <h3 className=\"titleAndSortSpace_Title\">Important tasks</h3>\r\n          <SortList\r\n            sortingMethod={sortingMethodImportant}\r\n            changeHandler={changeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"taskSpace_taskListSpace\">\r\n          <ul className=\"taskListSpace_taskList\">\r\n            <ImportantTaskList\r\n              tasks={tasks}\r\n              finished={finishTaskHandle}\r\n              deleted={deleteTaskHandle}\r\n              sort={sortingMethodImportant}\r\n              sortDirection={sortDirection}\r\n            />\r\n          </ul>\r\n        </div>\r\n      </section>\r\n      <section className=\"mainSection_taskSpace\">\r\n        <div className=\"taskSpace_titleAndSortSpace\">\r\n          <h3 className=\"titleAndSortSpace_Title\">Finished tasks</h3>\r\n          <SortList\r\n            sortingMethod={sortingMethodFinished}\r\n            changeHandler={changeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"taskSpace_taskListSpace\">\r\n          <ul className=\"taskListSpace_taskList\">\r\n            <FinishedTasksList\r\n              finishedTasks={finishedTasks}\r\n              deleted={deleteTaskHandle}\r\n              sort={sortingMethodFinished}\r\n              sortDirection={sortDirection}\r\n            />\r\n          </ul>\r\n        </div>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import { useState } from \"react\";\r\n\r\nimport Footer from \"./components/Layout/Footer\";\r\nimport Header from \"./components/Layout/Header\";\r\nimport Main from \"./components/Layout/Main\";\r\n\r\nimport \"./styles/SCSS/app.scss\";\r\n\r\nconst App = () => {\r\n  const [tasks, setTasks] = useState({ normalTasks: [], importantTasks: [] });\r\n  const [finishedTasks, setFinishedTasks] = useState({ finishedTasks: [] });\r\n\r\n  const finishTaskHandle = (id, recognizer) => {\r\n    if (recognizer === \"FinishedNormalTask\") {\r\n      const clickedTask = tasks.normalTasks.findIndex((x) => x.id === id);\r\n\r\n      finishedTasks.finishedTasks.push(tasks.normalTasks[clickedTask]);\r\n\r\n      setFinishedTasks((prevState) => ({\r\n        finishedTasks: [...prevState.finishedTasks],\r\n      }));\r\n\r\n      tasks.normalTasks.splice(clickedTask, 1);\r\n\r\n      setTasks((prevState) => ({\r\n        normalTasks: [...tasks.normalTasks],\r\n        importantTasks: [...prevState.importantTasks],\r\n      }));\r\n    } else {\r\n      const clickedTask = tasks.importantTasks.findIndex((x) => x.id === id);\r\n\r\n      finishedTasks.finishedTasks.push(tasks.importantTasks[clickedTask]);\r\n\r\n      setFinishedTasks((prevState) => ({\r\n        finishedTasks: [...prevState.finishedTasks],\r\n      }));\r\n\r\n      tasks.importantTasks.splice(clickedTask, 1);\r\n\r\n      setTasks((prevState) => ({\r\n        normalTasks: [...prevState.normalTasks],\r\n        importantTasks: [...tasks.importantTasks],\r\n      }));\r\n    }\r\n  };\r\n\r\n  const deleteTaskHandle = (id, recognizer) => {\r\n    if (recognizer === \"finished\") {\r\n      const clickedTask = finishedTasks.finishedTasks.findIndex(\r\n        (x) => x.id === id\r\n      );\r\n\r\n      finishedTasks.finishedTasks.splice(clickedTask, 1);\r\n\r\n      setFinishedTasks((prevState) => ({\r\n        finishedTasks: [...prevState.finishedTasks],\r\n      }));\r\n    } else if (recognizer === \"notFinishedNormalTask\") {\r\n      const clickedTask = tasks.normalTasks.findIndex((x) => x.id === id);\r\n\r\n      tasks.normalTasks.splice(clickedTask, 1);\r\n\r\n      setTasks((prevState) => ({\r\n        normalTasks: [...tasks.normalTasks],\r\n        importantTasks: [...prevState.importantTasks],\r\n      }));\r\n    } else {\r\n      const clickedTask = tasks.importantTasks.findIndex((x) => x.id === id);\r\n\r\n      tasks.importantTasks.splice(clickedTask, 1);\r\n\r\n      setTasks((prevState) => ({\r\n        normalTasks: [...prevState.normalTasks],\r\n        importantTasks: [...tasks.importantTasks],\r\n      }));\r\n    }\r\n  };\r\n\r\n  const addTaskHandler = (newTask, importance) => {\r\n    if (importance === false) {\r\n      setTasks((prevState) => ({\r\n        normalTasks: [...tasks.normalTasks, newTask],\r\n        importantTasks: [...prevState.importantTasks],\r\n      }));\r\n    } else if (importance === true) {\r\n      setTasks((prevState) => ({\r\n        normalTasks: [...prevState.normalTasks],\r\n        importantTasks: [...tasks.importantTasks, newTask],\r\n      }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <Header />\r\n      <Main\r\n        tasks={tasks}\r\n        finishedTasks={finishedTasks}\r\n        finishTaskHandle={finishTaskHandle}\r\n        deleteTaskHandle={deleteTaskHandle}\r\n        addTaskHandler={addTaskHandler}\r\n      />\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}