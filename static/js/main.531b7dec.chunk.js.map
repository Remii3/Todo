{"version":3,"sources":["Layouts/Header.js","Layouts/Footer.js","components/TaskList.js","components/FinishedTasksList.js","Layouts/Main.js","components/App.js","index.js"],"names":["Header","Footer","TaskList","props","task","tasks","normalTasks","map","item","onClick","deleted","id","title","date","description","finished","console","log","ImportantTaskList","importantTasks","FinishedTasksList","actualDate","Date","toLocaleString","finishedTasks","Main","state","currentId","currentTitle","currentDescription","currentDate","importantTask","handleSubmit","e","preventDefault","setState","prevState","handleChange","name","target","dateTime","value","slice","checked","finishTaskHandle","recognizer","clickedTask","findIndex","x","push","splice","deleteTaskHandle","onSubmit","this","className","type","onChange","Component","App","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.531b7dec.chunk.js","sourcesContent":["import \"../styles/Header.css\";\r\nconst Header = () => {\r\n  return (\r\n    <div>\r\n      <h1>Todo</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","const Footer = () => {\r\n  return <div>Made by Remigiusz Wo≈∫niak</div>;\r\n};\r\n\r\nexport default Footer;\r\n","import \"../styles/TaskList.css\";\r\n\r\nconst TaskList = (props) => {\r\n  const task = props.tasks.normalTasks.map((item) => {\r\n    return (\r\n      <>\r\n        <li key={\"li\" + item.id}>\r\n          <h4>\r\n            <button\r\n              onClick={() => props.deleted(item.id, \"notFinishedNormalTask\")}\r\n            >\r\n              X\r\n            </button>\r\n            {item.title}\r\n          </h4>\r\n          <p>{item.date}</p>\r\n          <span>{item.description}</span>\r\n          <button onClick={() => props.finished(item.id, \"FinishedNormalTask\")}>\r\n            Finish\r\n          </button>\r\n        </li>\r\n      </>\r\n    );\r\n  });\r\n  console.log(props.tasks);\r\n  return task;\r\n};\r\nconst ImportantTaskList = (props) => {\r\n  const task = props.tasks.importantTasks.map((item) => {\r\n    return (\r\n      <>\r\n        <li key={\"im\" + item.id}>\r\n          <h4>\r\n            <button\r\n              onClick={() => props.deleted(item.id, \"notFinishedImportantTask\")}\r\n            >\r\n              X\r\n            </button>\r\n            {item.title}\r\n          </h4>\r\n          <p>{item.date}</p>\r\n          <span>{item.description}</span>\r\n          <button\r\n            onClick={() => props.finished(item.id, \"FinishedImportantTask\")}\r\n          >\r\n            Finish\r\n          </button>\r\n        </li>\r\n      </>\r\n    );\r\n  });\r\n  console.log(props.tasks);\r\n  return task;\r\n};\r\n\r\nexport { TaskList, ImportantTaskList };\r\n","const FinishedTasksList = (props) => {\r\n  const actualDate = new Date().toLocaleString();\r\n  const finishedTask = props.finishedTasks.map((item) => {\r\n    return (\r\n      <>\r\n        <li key={\"fi\" + item.id}>\r\n          <h4>\r\n            <button onClick={() => props.deleted(item.id, \"finished\")}>\r\n              X\r\n            </button>\r\n            {item.title}\r\n          </h4>\r\n          <p>\r\n            {item.date} (Termination date: {actualDate})\r\n          </p>\r\n          <span>{item.description}</span>\r\n        </li>\r\n      </>\r\n    );\r\n  });\r\n  return finishedTask;\r\n};\r\n\r\nexport default FinishedTasksList;\r\n","import \"../styles/Main.scss\";\r\nimport React, { Component } from \"react\";\r\nimport { TaskList, ImportantTaskList } from \"../components/TaskList\";\r\nimport FinishedTasksList from \"../components/FinishedTasksList\";\r\n\r\nclass Main extends Component {\r\n  state = {\r\n    currentId: 0,\r\n    currentTitle: \"\",\r\n    currentDescription: \"\",\r\n    currentDate: \"\",\r\n    tasks: { normalTasks: [], importantTasks: [] },\r\n    finishedTasks: [],\r\n    importantTask: false,\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    const {\r\n      currentId,\r\n      currentTitle,\r\n      currentDescription,\r\n      currentDate,\r\n      tasks,\r\n      importantTask,\r\n    } = this.state;\r\n    e.preventDefault();\r\n    const task = {\r\n      id: currentId,\r\n      title: currentTitle,\r\n      description: currentDescription,\r\n      date: currentDate,\r\n    };\r\n    if (importantTask === false) {\r\n      this.setState((prevState) => ({\r\n        tasks: {\r\n          ...prevState.tasks,\r\n          normalTasks: [...tasks.normalTasks, task],\r\n        },\r\n        currentId: this.state.currentId + 1,\r\n      }));\r\n      console.log(this.state.tasks);\r\n    } else {\r\n      this.setState((prevState) => ({\r\n        tasks: {\r\n          ...prevState.tasks,\r\n          importantTasks: [...tasks.importantTasks, task],\r\n        },\r\n        currentId: this.state.currentId + 1,\r\n      }));\r\n    }\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const name = e.target.name;\r\n    if (name === \"currentDate\") {\r\n      const date = e.target.value.slice(0, 10);\r\n      const time = e.target.value.slice(12);\r\n      const dateTime = date + \" \" + time;\r\n      this.setState({ [name]: dateTime });\r\n    } else {\r\n      this.setState({ [name]: e.target.value });\r\n    }\r\n    if (name === \"importantTask\" && e.target.checked) {\r\n      this.setState({ [name]: true });\r\n    } else if (name === \"importantTask\") {\r\n      this.setState({ [name]: false });\r\n    }\r\n  };\r\n\r\n  finishTaskHandle = (id, recognizer) => {\r\n    if (recognizer === \"FinishedNormalTask\") {\r\n      const clickedTask = this.state.tasks.normalTasks.findIndex(\r\n        (x) => x.id === id\r\n      );\r\n      this.state.finishedTasks.push(this.state.tasks.normalTasks[clickedTask]);\r\n      this.setState({ finishedTasks: [...this.state.finishedTasks] });\r\n      this.state.tasks.normalTasks.splice(clickedTask, 1);\r\n      this.setState((prevState) => ({\r\n        tasks: {\r\n          ...prevState.tasks,\r\n          normalTasks: [...this.state.tasks.normalTasks],\r\n        },\r\n      }));\r\n    } else {\r\n      const clickedTask = this.state.tasks.importantTasks.findIndex(\r\n        (x) => x.id === id\r\n      );\r\n      this.state.finishedTasks.push(\r\n        this.state.tasks.importantTasks[clickedTask]\r\n      );\r\n      this.setState({ finishedTasks: [...this.state.finishedTasks] });\r\n      this.state.tasks.importantTasks.splice(clickedTask, 1);\r\n      this.setState((prevState) => ({\r\n        tasks: {\r\n          ...prevState.tasks,\r\n          importantTasks: [...this.state.tasks.importantTasks],\r\n        },\r\n      }));\r\n    }\r\n  };\r\n\r\n  deleteTaskHandle = (id, recognizer) => {\r\n    if (recognizer === \"finished\") {\r\n      const clickedTask = this.state.finishedTasks.findIndex(\r\n        (x) => x.id === id\r\n      );\r\n      this.state.finishedTasks.splice(clickedTask, 1);\r\n      this.setState({ finishedTasks: this.state.finishedTasks });\r\n    } else if (recognizer === \"notFinishedNormalTask\") {\r\n      const clickedTask = this.state.tasks.normalTasks.findIndex(\r\n        (x) => x.id === id\r\n      );\r\n      this.state.tasks.normalTasks.splice(clickedTask, 1);\r\n      this.setState((prevState) => ({\r\n        tasks: {\r\n          ...prevState.tasks,\r\n          normalTasks: [...this.state.tasks.normalTasks],\r\n        },\r\n      }));\r\n    } else {\r\n      const clickedTask = this.state.tasks.importantTasks.findIndex(\r\n        (x) => x.id === id\r\n      );\r\n      this.state.tasks.importantTasks.splice(clickedTask, 1);\r\n      this.setState((prevState) => ({\r\n        tasks: {\r\n          ...prevState.tasks,\r\n          importantTasks: [...this.state.tasks.importantTasks],\r\n        },\r\n      }));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <section>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div className=\"inputInfo\">\r\n            <h1>Enter information</h1>\r\n            <label>\r\n              Title:{\" \"}\r\n              <input\r\n                name=\"currentTitle\"\r\n                type=\"text\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </label>\r\n            <br />\r\n            <label>\r\n              Description:{\" \"}\r\n              <input\r\n                name=\"currentDescription\"\r\n                type=\"text\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </label>\r\n            <br />\r\n            <label>\r\n              Date:{\" \"}\r\n              <input\r\n                name=\"currentDate\"\r\n                type=\"datetime-local\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </label>\r\n            <br />\r\n            <label>\r\n              Important\r\n              <input\r\n                name=\"importantTask\"\r\n                type=\"checkbox\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </label>\r\n            <button>Add</button>\r\n          </div>\r\n        </form>\r\n        <div className=\"normalTasks\">\r\n          <h3>Todo tasks</h3>\r\n          <ul>\r\n            <TaskList\r\n              key=\"test\"\r\n              className=\"taskList\"\r\n              tasks={this.state.tasks}\r\n              finished={this.finishTaskHandle}\r\n              deleted={this.deleteTaskHandle}\r\n            />\r\n          </ul>\r\n        </div>\r\n        <div className=\"importantTasks\">\r\n          <h3>important tasks</h3>\r\n          <ul>\r\n            <ImportantTaskList\r\n              key=\"test2\"\r\n              className=\"importantTaskList\"\r\n              tasks={this.state.tasks}\r\n              finished={this.finishTaskHandle}\r\n              deleted={this.deleteTaskHandle}\r\n            />\r\n          </ul>\r\n        </div>\r\n        <div className=\"finishedTasks\">\r\n          <h3>Done tasks</h3>\r\n          <ul>\r\n            <FinishedTasksList\r\n              className=\"finishedTasksList\"\r\n              finishedTasks={this.state.finishedTasks}\r\n              deleted={this.deleteTaskHandle}\r\n            />\r\n          </ul>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import \"../styles/App.scss\";\nimport React from \"react\";\nimport Header from \"../Layouts/Header\";\nimport Footer from \"../Layouts/Footer\";\nimport Main from \"../Layouts/Main\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"wrapper\">\n          <header>{<Header />}</header>\n          <main>{<Main />}</main>\n          <footer>{<Footer />}</footer>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}