{"version":3,"sources":["Layouts/Header.js","Layouts/Footer.js","components/TaskList.js","components/FinishedTasksList.js","Layouts/Main.js","components/App.js","index.js"],"names":["Header","Footer","TaskList","props","obj","tasks","normalTasks","sortDirection","sort","current","value","a","b","title","date","task","map","item","onClick","deleted","id","description","finished","console","log","ImportantTaskList","importantTasks","FinishedTasksList","finishedTasks","actualDate","Date","toLocaleString","Main","state","currentId","currentTitle","currentDescription","currentDate","importantTask","sortingMethodNormal","React","createRef","sortingMethodImportant","sortingMethodFinished","handleSubmit","e","preventDefault","setState","prevState","handleChange","name","target","dateTime","slice","checked","finishTaskHandle","recognizer","clickedTask","findIndex","x","push","splice","deleteTaskHandle","this","onSubmit","className","type","onChange","ref","selected","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SASeA,EARA,WACb,OACE,8BACE,yCCASC,EAJA,WACb,OAAO,kE,qBCCHC,G,YAAW,SAACC,GAChB,IAAIC,EAAMD,EAAME,MAAMC,YACtB,OAAQH,EAAMI,cAAgBJ,EAAMK,KAAKC,QAAQC,MAAQ,OACvD,IAAK,MACHN,EAAII,MAAK,SAACG,EAAGC,GAAJ,OAAWD,EAAEE,MAAQD,EAAEC,MAAQ,GAAK,KAC7C,MACF,IAAK,MACHT,EAAII,MAAK,SAACG,EAAGC,GAAJ,OAAWD,EAAEE,MAAQD,EAAEC,MAAQ,GAAK,KAC7C,MACF,IAAK,UACHT,EAAII,MAAK,SAACG,EAAGC,GAAJ,OAAWD,EAAEG,KAAOF,EAAEE,KAAO,GAAK,KAC3C,MACF,IAAK,UACHV,EAAII,MAAK,SAACG,EAAGC,GAAJ,OAAWD,EAAEG,KAAOF,EAAEE,KAAO,GAAK,KAC3C,MACF,QACE,OAAOV,EAAII,MAAK,SAACG,EAAGC,GAAJ,OAAWD,EAAEE,MAAQD,EAAEC,MAAQ,GAAK,KAExD,IAAME,EAAOX,EAAIY,KAAI,SAACC,GACpB,OACE,mCACE,+BACE,+BACE,wBACEC,QAAS,kBAAMf,EAAMgB,QAAQF,EAAKG,GAAI,0BADxC,eAKCH,EAAKJ,SAER,4BAAII,EAAKH,OACT,+BAAOG,EAAKI,cACZ,wBAAQH,QAAS,kBAAMf,EAAMmB,SAASL,EAAKG,GAAI,uBAA/C,sBAXO,KAAOH,EAAKG,SAmB3B,OADAG,QAAQC,IAAIrB,EAAME,OACXU,IAEHU,EAAoB,SAACtB,GACzB,IAAIC,EAAMD,EAAME,MAAMqB,eAEtB,OAAQvB,EAAMI,cAAgBJ,EAAMK,KAAKC,QAAQC,MAAQ,OACvD,IAAK,MACHN,EAAII,MAAK,SAACG,EAAGC,GAAJ,OAAWD,EAAEE,MAAQD,EAAEC,MAAQ,GAAK,KAC7C,MACF,IAAK,MACHT,EAAII,MAAK,SAACG,EAAGC,GAAJ,OAAWD,EAAEE,MAAQD,EAAEC,MAAQ,GAAK,KAC7C,MACF,IAAK,UACHT,EAAII,MAAK,SAACG,EAAGC,GAAJ,OAAWD,EAAEG,KAAOF,EAAEE,KAAO,GAAK,KAC3C,MACF,IAAK,UACHV,EAAII,MAAK,SAACG,EAAGC,GAAJ,OAAWD,EAAEG,KAAOF,EAAEE,KAAO,GAAK,KAC3C,MACF,QACE,OAAOV,EAAII,MAAK,SAACG,EAAGC,GAAJ,OAAWD,EAAEE,MAAQD,EAAEC,MAAQ,GAAK,KAGxD,IAAME,EAAOX,EAAIY,KAAI,SAACC,GACpB,OACE,mCACE,+BACE,+BACE,wBACEC,QAAS,kBAAMf,EAAMgB,QAAQF,EAAKG,GAAI,6BADxC,eAKCH,EAAKJ,SAER,4BAAII,EAAKH,OACT,+BAAOG,EAAKI,cACZ,wBACEH,QAAS,kBAAMf,EAAMmB,SAASL,EAAKG,GAAI,0BADzC,sBAXO,KAAOH,EAAKG,SAqB3B,OADAG,QAAQC,IAAIrB,EAAME,OACXU,GChDMY,EAxCW,SAACxB,GACzB,IAAIC,EAAMD,EAAMyB,cAChB,OAAQzB,EAAMI,cAAgBJ,EAAMK,KAAKC,QAAQC,MAAQ,OACvD,IAAK,MACHN,EAAII,MAAK,SAACG,EAAGC,GAAJ,OAAWD,EAAEE,MAAQD,EAAEC,MAAQ,GAAK,KAC7C,MACF,IAAK,MACHT,EAAII,MAAK,SAACG,EAAGC,GAAJ,OAAWD,EAAEE,MAAQD,EAAEC,MAAQ,GAAK,KAC7C,MACF,IAAK,UACHT,EAAII,MAAK,SAACG,EAAGC,GAAJ,OAAWD,EAAEG,KAAOF,EAAEE,KAAO,GAAK,KAC3C,MACF,IAAK,UACHV,EAAII,MAAK,SAACG,EAAGC,GAAJ,OAAWD,EAAEG,KAAOF,EAAEE,KAAO,GAAK,KAC3C,MACF,QACE,OAAOV,EAAII,MAAK,SAACG,EAAGC,GAAJ,OAAWD,EAAEE,MAAQD,EAAEC,MAAQ,GAAK,KAExD,IAAMgB,GAAa,IAAIC,MAAOC,iBAmB9B,OAlBqB3B,EAAIY,KAAI,SAACC,GAC5B,OACE,mCACE,+BACE,+BACE,wBAAQC,QAAS,kBAAMf,EAAMgB,QAAQF,EAAKG,GAAI,aAA9C,eAGCH,EAAKJ,SAER,8BACGI,EAAKH,KADR,uBACkCe,EADlC,OAGA,+BAAOZ,EAAKI,gBAVL,KAAOJ,EAAKG,UCsPdY,E,4MAtQbC,MAAQ,CACNC,UAAW,EACXC,aAAc,GACdC,mBAAoB,GACpBC,YAAa,GACbhC,MAAO,CAAEC,YAAa,GAAIoB,eAAgB,IAC1CE,cAAe,GACfU,eAAe,EACf/B,eAAe,G,EAGjBgC,oBAAsBC,IAAMC,Y,EAC5BC,uBAAyBF,IAAMC,Y,EAC/BE,sBAAwBH,IAAMC,Y,EAK9BG,aAAe,SAACC,GACd,MAOI,EAAKZ,MANPC,EADF,EACEA,UACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,mBACAC,EAJF,EAIEA,YACAhC,EALF,EAKEA,MACAiC,EANF,EAMEA,cAGFO,EAAEC,iBAEF,IAAM/B,EAAO,CACXK,GAAIc,EACJrB,MAAOsB,EACPd,YAAae,EACbtB,KAAMuB,IAGc,IAAlBC,EACF,EAAKS,UAAS,SAACC,GAAD,MAAgB,CAC5B3C,MAAM,2BACD2C,EAAU3C,OADV,IAEHC,YAAY,GAAD,mBAAMD,EAAMC,aAAZ,CAAyBS,MAEtCmB,UAAW,EAAKD,MAAMC,UAAY,MAGpC,EAAKa,UAAS,SAACC,GAAD,MAAgB,CAC5B3C,MAAM,2BACD2C,EAAU3C,OADV,IAEHqB,eAAe,GAAD,mBAAMrB,EAAMqB,gBAAZ,CAA4BX,MAE5CmB,UAAW,EAAKD,MAAMC,UAAY,O,EAKxCe,aAAe,SAACJ,GACd,IAAMK,EAAOL,EAAEM,OAAOD,KACtB,GAAa,gBAATA,EAAwB,CAC1B,IAEME,EAFOP,EAAEM,OAAOzC,MAAM2C,MAAM,EAAG,IAEb,IADXR,EAAEM,OAAOzC,MAAM2C,MAAM,IAElC,EAAKN,SAAL,eAAiBG,EAAOE,SAExB,EAAKL,SAAL,eAAiBG,EAAOL,EAAEM,OAAOzC,QAEtB,kBAATwC,GAA4BL,EAAEM,OAAOG,QACvC,EAAKP,SAAL,eAAiBG,GAAO,IACN,kBAATA,GACT,EAAKH,SAAL,eAAiBG,GAAO,K,EAI5BK,iBAAmB,SAACnC,EAAIoC,GACtB,GAAmB,uBAAfA,EAAqC,CACvC,IAAMC,EAAc,EAAKxB,MAAM5B,MAAMC,YAAYoD,WAC/C,SAACC,GAAD,OAAOA,EAAEvC,KAAOA,KAElB,EAAKa,MAAML,cAAcgC,KAAK,EAAK3B,MAAM5B,MAAMC,YAAYmD,IAC3D,EAAKV,SAAS,CAAEnB,cAAc,YAAK,EAAKK,MAAML,iBAC9C,EAAKK,MAAM5B,MAAMC,YAAYuD,OAAOJ,EAAa,GACjD,EAAKV,UAAS,SAACC,GAAD,MAAgB,CAC5B3C,MAAM,2BACD2C,EAAU3C,OADV,IAEHC,YAAY,YAAK,EAAK2B,MAAM5B,MAAMC,uBAGjC,CACL,IAAMmD,EAAc,EAAKxB,MAAM5B,MAAMqB,eAAegC,WAClD,SAACC,GAAD,OAAOA,EAAEvC,KAAOA,KAElB,EAAKa,MAAML,cAAcgC,KACvB,EAAK3B,MAAM5B,MAAMqB,eAAe+B,IAElC,EAAKV,SAAS,CAAEnB,cAAc,YAAK,EAAKK,MAAML,iBAC9C,EAAKK,MAAM5B,MAAMqB,eAAemC,OAAOJ,EAAa,GACpD,EAAKV,UAAS,SAACC,GAAD,MAAgB,CAC5B3C,MAAM,2BACD2C,EAAU3C,OADV,IAEHqB,eAAe,YAAK,EAAKO,MAAM5B,MAAMqB,wB,EAM7CoC,iBAAmB,SAAC1C,EAAIoC,GACtB,GAAmB,aAAfA,EAA2B,CAC7B,IAAMC,EAAc,EAAKxB,MAAML,cAAc8B,WAC3C,SAACC,GAAD,OAAOA,EAAEvC,KAAOA,KAElB,EAAKa,MAAML,cAAciC,OAAOJ,EAAa,GAC7C,EAAKV,SAAS,CAAEnB,cAAe,EAAKK,MAAML,qBACrC,GAAmB,0BAAf4B,EAAwC,CACjD,IAAMC,EAAc,EAAKxB,MAAM5B,MAAMC,YAAYoD,WAC/C,SAACC,GAAD,OAAOA,EAAEvC,KAAOA,KAElB,EAAKa,MAAM5B,MAAMC,YAAYuD,OAAOJ,EAAa,GACjD,EAAKV,UAAS,SAACC,GAAD,MAAgB,CAC5B3C,MAAM,2BACD2C,EAAU3C,OADV,IAEHC,YAAY,YAAK,EAAK2B,MAAM5B,MAAMC,uBAGjC,CACL,IAAMmD,EAAc,EAAKxB,MAAM5B,MAAMqB,eAAegC,WAClD,SAACC,GAAD,OAAOA,EAAEvC,KAAOA,KAElB,EAAKa,MAAM5B,MAAMqB,eAAemC,OAAOJ,EAAa,GACpD,EAAKV,UAAS,SAACC,GAAD,MAAgB,CAC5B3C,MAAM,2BACD2C,EAAU3C,OADV,IAEHqB,eAAe,YAAK,EAAKO,MAAM5B,MAAMqB,wB,uDApH7C,WACEqC,KAAKhB,SAAS,CAAExC,eAAe,M,oBAyHjC,WACE,OACE,oCACE,sBAAMyD,SAAUD,KAAKnB,aAArB,SACE,sBAAKqB,UAAU,YAAf,UACE,mDACA,kCACE,0CAAoB,IACpB,uBACEf,KAAK,eACLgB,KAAK,OACLC,SAAUJ,KAAKd,kBAGnB,uBACA,kCACE,gDAA0B,IAC1B,uBACEC,KAAK,qBACLgB,KAAK,OACLC,SAAUJ,KAAKd,kBAGnB,uBACA,kCACE,yCAAmB,IACnB,uBACEC,KAAK,cACLgB,KAAK,iBACLC,SAAUJ,KAAKd,kBAGnB,uBACA,wBAAOgB,UAAU,oBAAjB,UACE,8CAAwB,IACxB,uBACEf,KAAK,gBACLgB,KAAK,WACLC,SAAUJ,KAAKd,kBAGnB,8CAGJ,sBAAKgB,UAAU,cAAf,UACE,4CAEE,yBAAQG,IAAKL,KAAKxB,oBAAqB4B,SAAUJ,KAAKd,aAAtD,UACE,wBAAQvC,MAAM,MAAM2D,UAAQ,EAA5B,iBAGA,wBAAQ3D,MAAM,MAAd,iBACA,wBAAQA,MAAM,UAAd,uBACA,wBAAQA,MAAM,UAAd,6BAGJ,6BACE,cAAC,EAAD,CAEEuD,UAAU,WACV5D,MAAO0D,KAAK9B,MAAM5B,MAClBiB,SAAUyC,KAAKR,iBACfpC,QAAS4C,KAAKD,iBACdtD,KAAMuD,KAAKxB,oBACXhC,cAAewD,KAAK9B,MAAM1B,eANtB,aAUV,sBAAK0D,UAAU,iBAAf,UACE,iDACkB,IAChB,yBACEG,IAAKL,KAAKrB,uBACVyB,SAAUJ,KAAKd,aAFjB,UAIE,wBAAQvC,MAAM,MAAM2D,UAAQ,EAA5B,iBAGA,wBAAQ3D,MAAM,MAAd,iBACA,wBAAQA,MAAM,UAAd,uBACA,wBAAQA,MAAM,UAAd,6BAGJ,6BACE,cAAC,EAAD,CAEEuD,UAAU,oBACV5D,MAAO0D,KAAK9B,MAAM5B,MAClBiB,SAAUyC,KAAKR,iBACfpC,QAAS4C,KAAKD,iBACdtD,KAAMuD,KAAKrB,uBACXnC,cAAewD,KAAK9B,MAAM1B,eANtB,cAUV,sBAAK0D,UAAU,gBAAf,UACE,gDAEE,yBACEG,IAAKL,KAAKpB,sBACVwB,SAAUJ,KAAKd,aAFjB,UAIE,wBAAQvC,MAAM,MAAM2D,UAAQ,EAA5B,iBAGA,wBAAQ3D,MAAM,MAAd,iBACA,wBAAQA,MAAM,UAAd,uBACA,wBAAQA,MAAM,UAAd,6BAGJ,6BACE,cAAC,EAAD,CACEuD,UAAU,oBACVrC,cAAemC,KAAK9B,MAAML,cAC1BT,QAAS4C,KAAKD,iBACdtD,KAAMuD,KAAKpB,sBACXpC,cAAewD,KAAK9B,MAAM1B,4B,GA9PrB+D,aCeJC,E,4JAbb,WACE,OACE,qBAAKN,UAAU,MAAf,SACE,sBAAKA,UAAU,UAAf,UACE,iCAAS,cAAC,EAAD,MACT,+BAAO,cAAC,EAAD,MACP,iCAAS,cAAC,EAAD,e,GAPDzB,IAAM8B,WCDxBE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a1c271cd.chunk.js","sourcesContent":["import \"../styles/Header.css\";\r\nconst Header = () => {\r\n  return (\r\n    <div>\r\n      <h1>Todo</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","const Footer = () => {\r\n  return <div>Made by Remigiusz WoÅºniak</div>;\r\n};\r\n\r\nexport default Footer;\r\n","import \"../styles/TaskList.css\";\r\n\r\nconst TaskList = (props) => {\r\n  let obj = props.tasks.normalTasks;\r\n  switch (props.sortDirection ? props.sort.current.value : \"A-Z\") {\r\n    case \"A-Z\":\r\n      obj.sort((a, b) => (a.title > b.title ? 1 : -1));\r\n      break;\r\n    case \"Z-A\":\r\n      obj.sort((a, b) => (a.title < b.title ? 1 : -1));\r\n      break;\r\n    case \"New-old\":\r\n      obj.sort((a, b) => (a.date > b.date ? 1 : -1));\r\n      break;\r\n    case \"Old-new\":\r\n      obj.sort((a, b) => (a.date < b.date ? 1 : -1));\r\n      break;\r\n    default:\r\n      return obj.sort((a, b) => (a.title > b.title ? 1 : -1));\r\n  }\r\n  const task = obj.map((item) => {\r\n    return (\r\n      <>\r\n        <li key={\"li\" + item.id}>\r\n          <h4>\r\n            <button\r\n              onClick={() => props.deleted(item.id, \"notFinishedNormalTask\")}\r\n            >\r\n              X\r\n            </button>\r\n            {item.title}\r\n          </h4>\r\n          <p>{item.date}</p>\r\n          <span>{item.description}</span>\r\n          <button onClick={() => props.finished(item.id, \"FinishedNormalTask\")}>\r\n            Finish\r\n          </button>\r\n        </li>\r\n      </>\r\n    );\r\n  });\r\n  console.log(props.tasks);\r\n  return task;\r\n};\r\nconst ImportantTaskList = (props) => {\r\n  let obj = props.tasks.importantTasks;\r\n\r\n  switch (props.sortDirection ? props.sort.current.value : \"A-Z\") {\r\n    case \"A-Z\":\r\n      obj.sort((a, b) => (a.title > b.title ? 1 : -1));\r\n      break;\r\n    case \"Z-A\":\r\n      obj.sort((a, b) => (a.title < b.title ? 1 : -1));\r\n      break;\r\n    case \"New-old\":\r\n      obj.sort((a, b) => (a.date > b.date ? 1 : -1));\r\n      break;\r\n    case \"Old-new\":\r\n      obj.sort((a, b) => (a.date < b.date ? 1 : -1));\r\n      break;\r\n    default:\r\n      return obj.sort((a, b) => (a.title > b.title ? 1 : -1));\r\n  }\r\n\r\n  const task = obj.map((item) => {\r\n    return (\r\n      <>\r\n        <li key={\"im\" + item.id}>\r\n          <h4>\r\n            <button\r\n              onClick={() => props.deleted(item.id, \"notFinishedImportantTask\")}\r\n            >\r\n              X\r\n            </button>\r\n            {item.title}\r\n          </h4>\r\n          <p>{item.date}</p>\r\n          <span>{item.description}</span>\r\n          <button\r\n            onClick={() => props.finished(item.id, \"FinishedImportantTask\")}\r\n          >\r\n            Finish\r\n          </button>\r\n        </li>\r\n      </>\r\n    );\r\n  });\r\n  console.log(props.tasks);\r\n  return task;\r\n};\r\n\r\nexport { TaskList, ImportantTaskList };\r\n","const FinishedTasksList = (props) => {\r\n  let obj = props.finishedTasks;\r\n  switch (props.sortDirection ? props.sort.current.value : \"A-Z\") {\r\n    case \"A-Z\":\r\n      obj.sort((a, b) => (a.title > b.title ? 1 : -1));\r\n      break;\r\n    case \"Z-A\":\r\n      obj.sort((a, b) => (a.title < b.title ? 1 : -1));\r\n      break;\r\n    case \"New-old\":\r\n      obj.sort((a, b) => (a.date > b.date ? 1 : -1));\r\n      break;\r\n    case \"Old-new\":\r\n      obj.sort((a, b) => (a.date < b.date ? 1 : -1));\r\n      break;\r\n    default:\r\n      return obj.sort((a, b) => (a.title > b.title ? 1 : -1));\r\n  }\r\n  const actualDate = new Date().toLocaleString();\r\n  const finishedTask = obj.map((item) => {\r\n    return (\r\n      <>\r\n        <li key={\"fi\" + item.id}>\r\n          <h4>\r\n            <button onClick={() => props.deleted(item.id, \"finished\")}>\r\n              X\r\n            </button>\r\n            {item.title}\r\n          </h4>\r\n          <p>\r\n            {item.date} (Termination date: {actualDate})\r\n          </p>\r\n          <span>{item.description}</span>\r\n        </li>\r\n      </>\r\n    );\r\n  });\r\n  return finishedTask;\r\n};\r\n\r\nexport default FinishedTasksList;\r\n","import \"../styles/Main.scss\";\r\nimport React, { Component } from \"react\";\r\nimport { TaskList, ImportantTaskList } from \"../components/TaskList\";\r\nimport FinishedTasksList from \"../components/FinishedTasksList\";\r\n\r\nclass Main extends Component {\r\n  state = {\r\n    currentId: 0,\r\n    currentTitle: \"\",\r\n    currentDescription: \"\",\r\n    currentDate: \"\",\r\n    tasks: { normalTasks: [], importantTasks: [] },\r\n    finishedTasks: [],\r\n    importantTask: false,\r\n    sortDirection: false,\r\n  };\r\n\r\n  sortingMethodNormal = React.createRef();\r\n  sortingMethodImportant = React.createRef();\r\n  sortingMethodFinished = React.createRef();\r\n\r\n  componentDidMount() {\r\n    this.setState({ sortDirection: true });\r\n  }\r\n  handleSubmit = (e) => {\r\n    const {\r\n      currentId,\r\n      currentTitle,\r\n      currentDescription,\r\n      currentDate,\r\n      tasks,\r\n      importantTask,\r\n    } = this.state;\r\n\r\n    e.preventDefault();\r\n\r\n    const task = {\r\n      id: currentId,\r\n      title: currentTitle,\r\n      description: currentDescription,\r\n      date: currentDate,\r\n    };\r\n\r\n    if (importantTask === false) {\r\n      this.setState((prevState) => ({\r\n        tasks: {\r\n          ...prevState.tasks,\r\n          normalTasks: [...tasks.normalTasks, task],\r\n        },\r\n        currentId: this.state.currentId + 1,\r\n      }));\r\n    } else {\r\n      this.setState((prevState) => ({\r\n        tasks: {\r\n          ...prevState.tasks,\r\n          importantTasks: [...tasks.importantTasks, task],\r\n        },\r\n        currentId: this.state.currentId + 1,\r\n      }));\r\n    }\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const name = e.target.name;\r\n    if (name === \"currentDate\") {\r\n      const date = e.target.value.slice(0, 10);\r\n      const time = e.target.value.slice(12);\r\n      const dateTime = date + \" \" + time;\r\n      this.setState({ [name]: dateTime });\r\n    } else {\r\n      this.setState({ [name]: e.target.value });\r\n    }\r\n    if (name === \"importantTask\" && e.target.checked) {\r\n      this.setState({ [name]: true });\r\n    } else if (name === \"importantTask\") {\r\n      this.setState({ [name]: false });\r\n    }\r\n  };\r\n\r\n  finishTaskHandle = (id, recognizer) => {\r\n    if (recognizer === \"FinishedNormalTask\") {\r\n      const clickedTask = this.state.tasks.normalTasks.findIndex(\r\n        (x) => x.id === id\r\n      );\r\n      this.state.finishedTasks.push(this.state.tasks.normalTasks[clickedTask]);\r\n      this.setState({ finishedTasks: [...this.state.finishedTasks] });\r\n      this.state.tasks.normalTasks.splice(clickedTask, 1);\r\n      this.setState((prevState) => ({\r\n        tasks: {\r\n          ...prevState.tasks,\r\n          normalTasks: [...this.state.tasks.normalTasks],\r\n        },\r\n      }));\r\n    } else {\r\n      const clickedTask = this.state.tasks.importantTasks.findIndex(\r\n        (x) => x.id === id\r\n      );\r\n      this.state.finishedTasks.push(\r\n        this.state.tasks.importantTasks[clickedTask]\r\n      );\r\n      this.setState({ finishedTasks: [...this.state.finishedTasks] });\r\n      this.state.tasks.importantTasks.splice(clickedTask, 1);\r\n      this.setState((prevState) => ({\r\n        tasks: {\r\n          ...prevState.tasks,\r\n          importantTasks: [...this.state.tasks.importantTasks],\r\n        },\r\n      }));\r\n    }\r\n  };\r\n\r\n  deleteTaskHandle = (id, recognizer) => {\r\n    if (recognizer === \"finished\") {\r\n      const clickedTask = this.state.finishedTasks.findIndex(\r\n        (x) => x.id === id\r\n      );\r\n      this.state.finishedTasks.splice(clickedTask, 1);\r\n      this.setState({ finishedTasks: this.state.finishedTasks });\r\n    } else if (recognizer === \"notFinishedNormalTask\") {\r\n      const clickedTask = this.state.tasks.normalTasks.findIndex(\r\n        (x) => x.id === id\r\n      );\r\n      this.state.tasks.normalTasks.splice(clickedTask, 1);\r\n      this.setState((prevState) => ({\r\n        tasks: {\r\n          ...prevState.tasks,\r\n          normalTasks: [...this.state.tasks.normalTasks],\r\n        },\r\n      }));\r\n    } else {\r\n      const clickedTask = this.state.tasks.importantTasks.findIndex(\r\n        (x) => x.id === id\r\n      );\r\n      this.state.tasks.importantTasks.splice(clickedTask, 1);\r\n      this.setState((prevState) => ({\r\n        tasks: {\r\n          ...prevState.tasks,\r\n          importantTasks: [...this.state.tasks.importantTasks],\r\n        },\r\n      }));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <section>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div className=\"inputInfo\">\r\n            <h1>Enter information</h1>\r\n            <label>\r\n              <span>Title:</span>{\" \"}\r\n              <input\r\n                name=\"currentTitle\"\r\n                type=\"text\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </label>\r\n            <br />\r\n            <label>\r\n              <span>Description:</span>{\" \"}\r\n              <input\r\n                name=\"currentDescription\"\r\n                type=\"text\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </label>\r\n            <br />\r\n            <label>\r\n              <span>Date:</span>{\" \"}\r\n              <input\r\n                name=\"currentDate\"\r\n                type=\"datetime-local\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </label>\r\n            <br />\r\n            <label className=\"importantCheckbox\">\r\n              <span>Important:</span>{\" \"}\r\n              <input\r\n                name=\"importantTask\"\r\n                type=\"checkbox\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </label>\r\n            <button>Add</button>\r\n          </div>\r\n        </form>\r\n        <div className=\"normalTasks\">\r\n          <h3>\r\n            Todo tasks\r\n            <select ref={this.sortingMethodNormal} onChange={this.handleChange}>\r\n              <option value=\"A-Z\" selected>\r\n                A-Z\r\n              </option>\r\n              <option value=\"Z-A\">Z-A</option>\r\n              <option value=\"New-old\">New - old</option>\r\n              <option value=\"Old-new\">Old - new</option>\r\n            </select>\r\n          </h3>\r\n          <ul>\r\n            <TaskList\r\n              key=\"test\"\r\n              className=\"taskList\"\r\n              tasks={this.state.tasks}\r\n              finished={this.finishTaskHandle}\r\n              deleted={this.deleteTaskHandle}\r\n              sort={this.sortingMethodNormal}\r\n              sortDirection={this.state.sortDirection}\r\n            />\r\n          </ul>\r\n        </div>\r\n        <div className=\"importantTasks\">\r\n          <h3>\r\n            Important tasks{\" \"}\r\n            <select\r\n              ref={this.sortingMethodImportant}\r\n              onChange={this.handleChange}\r\n            >\r\n              <option value=\"A-Z\" selected>\r\n                A-Z\r\n              </option>\r\n              <option value=\"Z-A\">Z-A</option>\r\n              <option value=\"New-old\">New - old</option>\r\n              <option value=\"Old-new\">Old - new</option>\r\n            </select>\r\n          </h3>\r\n          <ul>\r\n            <ImportantTaskList\r\n              key=\"test2\"\r\n              className=\"importantTaskList\"\r\n              tasks={this.state.tasks}\r\n              finished={this.finishTaskHandle}\r\n              deleted={this.deleteTaskHandle}\r\n              sort={this.sortingMethodImportant}\r\n              sortDirection={this.state.sortDirection}\r\n            />\r\n          </ul>\r\n        </div>\r\n        <div className=\"finishedTasks\">\r\n          <h3>\r\n            Finished tasks\r\n            <select\r\n              ref={this.sortingMethodFinished}\r\n              onChange={this.handleChange}\r\n            >\r\n              <option value=\"A-Z\" selected>\r\n                A-Z\r\n              </option>\r\n              <option value=\"Z-A\">Z-A</option>\r\n              <option value=\"New-old\">New - old</option>\r\n              <option value=\"Old-new\">Old - new</option>\r\n            </select>\r\n          </h3>\r\n          <ul>\r\n            <FinishedTasksList\r\n              className=\"finishedTasksList\"\r\n              finishedTasks={this.state.finishedTasks}\r\n              deleted={this.deleteTaskHandle}\r\n              sort={this.sortingMethodFinished}\r\n              sortDirection={this.state.sortDirection}\r\n            />\r\n          </ul>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import \"../styles/App.scss\";\r\nimport React from \"react\";\r\nimport Header from \"../Layouts/Header\";\r\nimport Footer from \"../Layouts/Footer\";\r\nimport Main from \"../Layouts/Main\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"wrapper\">\r\n          <header>{<Header />}</header>\r\n          <main>{<Main />}</main>\r\n          <footer>{<Footer />}</footer>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./styles/index.css\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}