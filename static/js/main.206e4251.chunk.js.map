{"version":3,"sources":["Layouts/Header.js","Layouts/Footer.js","components/TaskList.js","components/FinishedTasksList.js","Layouts/Main.js","components/App.js","index.js"],"names":["Header","Footer","TaskList","props","task","tasks","map","item","onClick","deleted","id","title","date","description","finished","console","log","FinishedTasksList","finishedTasks","Main","state","currentId","currentTitle","currentDescription","currentDate","handleSubmit","e","preventDefault","setState","handleChange","name","target","dateTime","value","slice","finishTaskHandle","clickedTask","findIndex","x","push","splice","deleteTaskHandle","recognizer","onSubmit","this","className","type","onChange","Component","App","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.206e4251.chunk.js","sourcesContent":["const Header = () => {\r\n  return <div>Header</div>;\r\n};\r\n\r\nexport default Header;\r\n","const Footer = () => {\r\n  return <div>Made by Remigiusz Wo≈∫niak</div>;\r\n};\r\n\r\nexport default Footer;\r\n","import \"../styles/TaskList.css\";\r\n\r\nconst TaskList = (props) => {\r\n  const task = props.tasks.map((item) => {\r\n    return (\r\n      <>\r\n        <li key={\"li\" + item.id}>\r\n          <h4>\r\n            <button onClick={() => props.deleted(item.id, \"notFinished\")}>\r\n              X\r\n            </button>\r\n            {item.title}\r\n          </h4>\r\n          <p>{item.date}</p>\r\n          <span>{item.description}</span>\r\n          <button onClick={() => props.finished(item.id)}>Finish</button>\r\n        </li>\r\n      </>\r\n    );\r\n  });\r\n  console.log(props.tasks);\r\n  return task;\r\n};\r\n\r\nexport default TaskList;\r\n","const FinishedTasksList = (props) => {\r\n  const finishedTask = props.finishedTasks.map((item) => {\r\n    return (\r\n      <>\r\n        <li key={\"fi\" + item.id}>\r\n          <h4>\r\n            <button onClick={() => props.deleted(item.id, \"finished\")}>\r\n              X\r\n            </button>\r\n            {item.title}\r\n          </h4>\r\n          <p>{item.date}</p>\r\n          <span>{item.description}</span>\r\n        </li>\r\n      </>\r\n    );\r\n  });\r\n  return finishedTask;\r\n};\r\n\r\nexport default FinishedTasksList;\r\n","import \"../styles/Main.scss\";\r\nimport React, { Component } from \"react\";\r\nimport TaskList from \"../components/TaskList\";\r\nimport FinishedTasksList from \"../components/FinishedTasksList\";\r\n\r\nclass Main extends Component {\r\n  state = {\r\n    currentId: 0,\r\n    currentTitle: \"\",\r\n    currentDescription: \"\",\r\n    currentDate: \"\",\r\n    tasks: [],\r\n    finishedTasks: [],\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    const { currentId, currentTitle, currentDescription, currentDate, tasks } =\r\n      this.state;\r\n    e.preventDefault();\r\n    const task = {\r\n      id: currentId,\r\n      title: currentTitle,\r\n      description: currentDescription,\r\n      date: currentDate,\r\n    };\r\n\r\n    this.setState({\r\n      tasks: [...tasks, task],\r\n      currentId: this.state.currentId + 1,\r\n    });\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const name = e.target.name;\r\n    if (name === \"currentDate\") {\r\n      const date = e.target.value.slice(0, 10);\r\n      const time = e.target.value.slice(12);\r\n      const dateTime = date + \" \" + time;\r\n      this.setState({ [name]: dateTime });\r\n    } else {\r\n      this.setState({ [name]: e.target.value });\r\n    }\r\n  };\r\n\r\n  finishTaskHandle = (id) => {\r\n    const clickedTask = this.state.tasks.findIndex((x) => x.id === id);\r\n    this.state.finishedTasks.push(this.state.tasks[clickedTask]);\r\n    this.setState({ finishedTasks: [...this.state.finishedTasks] });\r\n    this.state.tasks.splice(clickedTask, 1);\r\n    this.setState({ tasks: this.state.tasks });\r\n  };\r\n\r\n  deleteTaskHandle = (id, recognizer) => {\r\n    if (recognizer === \"finished\") {\r\n      const clickedTask = this.state.finishedTasks.findIndex(\r\n        (x) => x.id === id\r\n      );\r\n      this.state.finishedTasks.splice(clickedTask, 1);\r\n      this.setState({ finishedTasks: this.state.finishedTasks });\r\n    } else {\r\n      const clickedTask = this.state.tasks.findIndex((x) => x.id === id);\r\n      this.state.tasks.splice(clickedTask, 1);\r\n      this.setState({ tasks: this.state.tasks });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <section>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div className=\"inputInfo\">\r\n            <h1>Enter information</h1>\r\n            <label>\r\n              Title:{\" \"}\r\n              <input\r\n                name=\"currentTitle\"\r\n                type=\"text\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </label>\r\n            <br />\r\n            <label>\r\n              Description:{\" \"}\r\n              <input\r\n                name=\"currentDescription\"\r\n                type=\"text\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </label>\r\n            <br />\r\n            <label>\r\n              Date:{\" \"}\r\n              <input\r\n                name=\"currentDate\"\r\n                type=\"datetime-local\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </label>\r\n            <br />\r\n            <button>Add</button>\r\n          </div>\r\n        </form>\r\n        <div className=\"normalTasks\">\r\n          <h3>Todo tasks</h3>\r\n          <ul>\r\n            <TaskList\r\n              key=\"test\"\r\n              className=\"taskList\"\r\n              tasks={this.state.tasks}\r\n              finished={this.finishTaskHandle}\r\n              deleted={this.deleteTaskHandle}\r\n            />\r\n          </ul>\r\n        </div>\r\n        <div className=\"importantTasks\">\r\n          <h3>important tasks</h3>\r\n          <ul></ul>\r\n        </div>\r\n        <div className=\"finishedTasks\">\r\n          <h3>Done tasks</h3>\r\n          <ul>\r\n            <FinishedTasksList\r\n              className=\"finishedTasksList\"\r\n              finishedTasks={this.state.finishedTasks}\r\n              deleted={this.deleteTaskHandle}\r\n            />\r\n          </ul>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import \"../styles/App.scss\";\nimport React from \"react\";\nimport Header from \"../Layouts/Header\";\nimport Footer from \"../Layouts/Footer\";\nimport Main from \"../Layouts/Main\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"wrapper\">\n          <header>{<Header />}</header>\n          <main>{<Main />}</main>\n          <footer>{<Footer />}</footer>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}